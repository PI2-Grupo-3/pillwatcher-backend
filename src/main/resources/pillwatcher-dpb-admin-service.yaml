swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "PillWatcher Admin Service"
  license:
    name: "MIT 2.0"
    url: "https://opensource.org/licenses/MIT"
basePath: "/v1/pillwatcher"
schemes:
  - "http"
tags:
  - name: Admin
paths:
  '/admins':
    post:
      summary: 'Add a new Admin to Pillwatcher'
      description: 'Add a new Admin to Pillwatcher'
      tags:
        - Admin
      operationId: "createAdmin"
      produces:
        - "application/json"
      parameters:
        - name: adminDtoForCreate
          in: body
          required: true
          schema:
            $ref: '#/definitions/AdminDTOForCreate'
      responses:
        '201':
          description: 'Admin created'
          schema:
            $ref: '#/definitions/AdminDTOForResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: VALIDATION_ERROR
              message: "Validation failed"
              details: ["Bad Request"]
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: UNAUTHORIZED
              message: "Unauthorized"
              details: ["Unauthorized"]
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: FORBIDDEN
              message: "Forbidden"
              details: ["Forbidden"]
        '500':
          description: Unexpected error
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: UNEXPECTED_ERROR
              message: "Internal server error"
              details: ["Internal server error"]
  '/admins/{cpf}':
    get:
      description: 'Get Admin Data from Specific Id'
      summary: 'Get Admin Data from Specific Id'
      tags:
        - Admin
      operationId: "getAdmin"
      produces:
        - "application/json"
      parameters:
        - name: cpf
          description: 'Admin Official Document (CPF)'
          in: path
          required: true
          type: string
      responses:
        '200':
          description: 'Admin Object'
          schema:
            $ref: '#/definitions/AdminDTOForGet'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: VALIDATION_ERROR
              message: "Validation failed"
              details: ["Bad Request"]
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: UNAUTHORIZED
              message: "Unauthorized"
              details: ["Unauthorized"]
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: FORBIDDEN
              message: "Forbidden"
              details: ["Forbidden"]
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: ADMIN_NOT_FOUND
              message: "Entity not found"
              details: ["Admin with id *** not found"]
        '500':
          description: Unexpected error
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: UNEXPECTED_ERROR
              message: "Internal server error"
              details: ["Internal server error"]
    put:
      summary: 'Update a Admin info on Pillwatcher'
      description: 'Update a Admin info on Pillwatcher'
      tags:
        - Admin
      operationId: "updateAdmin"
      produces:
        - "application/json"
      parameters:
        - name: adminDtoForUpdate
          in: body
          required: true
          schema:
            $ref: '#/definitions/AdminDTOForUpdate'
        - name: cpf
          description: 'Admin Official Document (CPF)'
          in: path
          required: true
          type: string
      responses:
        '200':
          description: 'Admin Object'
          schema:
            $ref: '#/definitions/AdminDTOForResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: VALIDATION_ERROR
              message: "Validation failed"
              details: ["Bad Request"]
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: UNAUTHORIZED
              message: "Unauthorized"
              details: ["Unauthorized"]
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: FORBIDDEN
              message: "Forbidden"
              details: ["Forbidden"]
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: ADMIN_NOT_FOUND
              message: "Entity not found"
              details: ["Admin with CPF *** not found"]
        '500':
          description: Unexpected error
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: UNEXPECTED_ERROR
              message: "Internal server error"
              details: ["Internal server error"]
    delete:
      summary: 'Delete a Admin from given CPF'
      description: 'Delete a Admin from given CPF'
      tags:
        - Admin
      operationId: "deleteAdmin"
      produces:
        - "application/json"
      parameters:
        - name: cpf
          description: 'Admin Official Document (CPF)'
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Ok
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: VALIDATION_ERROR
              message: "Validation failed"
              details: ["Constraint violation"]
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: UNAUTHORIZED
              message: "Unauthorized"
              details: ["Unauthorized"]
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: FORBIDDEN
              message: "Forbidden"
              details: ["Forbidden"]
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: ADMIN_NOT_FOUND
              message: "Entity not found"
              details: ["Admin with CPF *** not found"]
        '500':
          description: Unexpected error
          schema:
            $ref: '#/definitions/Fault'
          examples:
            application/json:
              code: UNEXPECTED_ERROR
              message: "Internal server error"
              details: ["Internal server error"]
definitions:
  AdminDTOForCreate:
    type: 'object'
    description: 'Structure used to create a Admin on Pillwatcher'
    properties:
      name:
        description: 'Admin name'
        example: 'Logan Warden'
        type: string
        minLength: 3
        maxLength: 120
      document:
        description: 'Admin Official Document (CPF)'
        example: '12345678910'
        type: string
        minLength: 11
        maxLength: 11
      imageUrl:
        description: 'Image Url from S3'
        example: 'https://s3.com/image_from_user.jpg'
        type: string
      email:
        description: 'Admin Email'
        example: 'logan.warden@email.com'
        type: string
  AdminDTOForGet:
    type: 'object'
    description: 'Structure used to create a Admin on Pillwatcher'
    properties:
      name:
        description: 'Admin name'
        example: 'Logan Warden'
        type: string
        minLength: 3
        maxLength: 120
      document:
        description: 'Admin Official Document (CPF)'
        example: '12345678910'
        type: string
        minLength: 11
        maxLength: 11
      email:
        description: 'Admin Email'
        example: 'logan.warden@email.com'
        type: string
      imageUrl:
        description: 'Image Url from S3'
        example: 'https://s3.com/image_from_user.jpg'
        type: string
  AdminDTOForUpdate:
    type: 'object'
    description: 'Structure used to update Admin info on Pillwatcher'
    properties:
      name:
        description: 'Admin name'
        example: 'Logan Warden'
        type: string
        minLength: 3
        maxLength: 120
      imageUrl:
        description: 'Image Url from S3'
        example: 'https://s3.com/image_from_user.jpg'
        type: string
      email:
        description: 'Admin Email'
        example: 'logan.warden@email.com'
        type: string
  AdminDTOForResponse:
    type: 'object'
    description: 'Structure used to return a Admin created on Pillwatcher'
    properties:
      name:
        description: 'Admin name'
        example: 'Logan Warden'
        type: string
        minLength: 3
        maxLength: 120
      email:
        description: 'Admin Email'
        example: 'logan.warden@email.com'
        type: string
      inclusionDate:
        description: 'Admin creation date'
        example: '2020-01-21T17:32:28Z'
        type: string
        format: 'date-time'
  ErrorCodeEnum:
    type: string
    enum:
      - ACCESS_DENIED
      - ADMIN_ALREADY_EXISTS
      - ADMIN_NOT_FOUND
      - INVALID_PARAMETER
      - TOO_MANY_REQUESTS
      - UNEXPECTED_ERROR
      - VALIDATION_ERROR
      - UNAUTHORIZED
  Fault:
    title: Fault
    type: object
    properties:
      code:
        $ref: '#/definitions/ErrorCodeEnum'
      message:
        description: Error description
        example: Internal Server Error
        type: string
      details:
        description: Error detailed description
        type: array
        items:
          type: string
        example: [Internal Server Error - An error has ocurred calling partner API.]